-- +migrate Up
-- MySQL Script generated by MySQL Workbench
-- Fri 05 Apr 2019 11:46:53 AM JST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema example
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(255) NULL,
  `email` VARCHAR(256) NULL,
  `created_at` DATETIME NULL COMMENT 'Created UTC Time',
  `updated_at` DATETIME NULL COMMENT 'Updated UTC Time',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COMMENT = 'Table for user information';


-- -----------------------------------------------------
-- Table `authentication_providers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `authentication_providers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `provider_type` ENUM('email', 'twitter', 'facebook', 'google') NOT NULL COMMENT 'Type of authentication provider such as twitter, facebook , email\n ',
  `provider_username` VARCHAR(255) NOT NULL COMMENT 'Unique identity of provider.\nThis is unique among provider.',
  `provider_password` VARCHAR(255) NOT NULL COMMENT 'Provider secret like password on email authentication.',
  `first_name` VARCHAR(255) NULL,
  `last_name` VARCHAR(255) NULL,
  `full_name` VARCHAR(255) NULL,
  `display_name` VARCHAR(255) NULL COMMENT 'display name displays on end user\'s display.\n',
  `email` VARCHAR(256) NULL,
  `profile_image_url` VARCHAR(1024) NULL COMMENT 'A url of profile image.',
  `created_at` DATETIME NULL COMMENT 'Created UTC time',
  `updated_at` DATETIME NULL COMMENT 'Updated UTC time',
  PRIMARY KEY (`id`),
  INDEX `fk_user_id_idx` (`user_id` ASC),
  INDEX `idx_provider_key` (`provider_username` ASC),
  INDEX `idx_provider_type_username` (`provider_type` ASC, `provider_username` ASC),
  UNIQUE INDEX `uq_idx_provide_type_provider_username` (`provider_type` ASC, `provider_username` ASC),
  CONSTRAINT `fk_authentication_providers_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `password_resets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `password_resets` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `authentication_provider_id` INT NOT NULL,
  `password_reset_token` VARCHAR(45) NULL,
  `status` ENUM('none', 'sent', 'verified') NULL,
  `expires_at` DATETIME NULL COMMENT 'The time token will expires at',
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `idx_password_reset_token` (`password_reset_token` ASC),
  INDEX `fk_authentication_providers_idx` (`authentication_provider_id` ASC),
  CONSTRAINT `fk_password_resets_authentication_provider_id`
    FOREIGN KEY (`authentication_provider_id`)
    REFERENCES `authentication_providers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Stores password reset token';


-- -----------------------------------------------------
-- Table `auth_tokens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auth_tokens` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `token` VARCHAR(255) NOT NULL,
  `expires_at` DATETIME NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_auth_tokens_user_id_idx` (`user_id` ASC),
  INDEX `idx_user_id_token` (`user_id` ASC, `token` ASC),
  CONSTRAINT `fk_auth_tokens_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'JWT Tokens store to refresh token';


-- -----------------------------------------------------
-- Table `profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `profiles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `first_name` VARCHAR(255) NULL,
  `last_name` VARCHAR(255) NULL,
  `full_name` VARCHAR(255) NULL,
  `phone_number` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_profiles_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_profiles_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` ENUM('ORGANIZATION_MEMBER', 'ORGANIZATION_ADMIN', 'USER', 'SUPER_ADMIN') NOT NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user_roles` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_roles_role_id_idx` (`role_id` ASC),
  INDEX `fk_user_roles_user_id_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_roles_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_roles_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- +migrate Down

DROP TABLE example.auth_tokens;
DROP TABLE example.authentication_providers;
DROP TABLE example.gorp_migrations;
DROP TABLE example.password_resets;
DROP TABLE example.profiles;
DROP TABLE example.roles;
DROP TABLE example.user_roles;
DROP TABLE example.users;
